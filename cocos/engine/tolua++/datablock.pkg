namespace framework
{
	namespace unity
	{
		class blockreader : public object
		{
			blockreader(const char* buffer, unsigned short length);
			void seek(unsigned short off);
			void reseek();
			bool eof() const;
			static blockreader* create(const char* buffer, unsigned short length);
			static blockreader* create(blockwrite* block);
			long long read1();
			long long read2();
			long long read4();
			long long read8();
			unsigned long long readu1();
			unsigned long long readu2();
			unsigned long long readu4();
			unsigned long long readu8();
			float readf1();
			double readf2();
		};
		class blockwrite : public object
		{
			blockwrite(char* buffer, unsigned short length);
			void seek(unsigned short off);
			void reseek();
			char* buffer() const;
			unsigned short length() const;
			static blockwrite* create();
			static blockwrite* create(char* buffer, unsigned short length);
			bool write1(const long long v);
			bool write2(const long long v);
			bool write4(const long long v);
			bool write8(const long long v);
			bool writeu1(const unsigned long long v);
			bool writeu2(const unsigned long long v);
			bool writeu4(const unsigned long long v);
			bool writeu8(const unsigned long long v);
			bool writef1(const float v);
			bool writef2(const double v);
		};
	}
}
